require 'json'

# -- Pre-Install -- #

# Check if file is in the same directory as uproject
uproject_file = Dir.glob("*.uproject").first
if uproject_file.nil?
  abort "Error: No .uproject file found in current directory. The Podfile must be copied into your Unreal project root directory"
end

abs_uproject_file = File.expand_path(uproject_file, base_directory = Dir.pwd)
project_name = File.basename(uproject_file, ".uproject")

puts "Configuring '#{project_name}' iOS builds for AppLovin MAX..."

uproject_data = File.read(uproject_file)
uproject_json = JSON.parse(uproject_data)
ue_version = uproject_json["EngineAssociation"]

# Run build tool to generate the Xcode project
ubt_path = "/Users/Shared/Epic\ Games/UE_#{ue_version}/Engine/Build/BatchFiles/RunUBT.sh"
system "\"#{ubt_path}\" -ProjectFiles -XCodeProjectFiles -Project=\"#{abs_uproject_file}\""

# -- CocoaPods -- #

workspace "#{project_name} (IOS)"
platform :ios, '12.0'

target 'AppLovinMAXDemo' do
  project "Intermediate/ProjectFiles/#{project_name} (IOS).xcodeproj"

  use_frameworks!
  inhibit_all_warnings!

  pod 'AppLovinSDK', '13.0.0'
  # TODO: Add your dependencies here
end

# -- Post-Install -- #

# TODO: Update the xcconfigs
# xcconfig_paths = Dir.glob("**/Intermediate/**#{project_name}_*.xcconfig")

# for unreal_xcconfig_path in $xcconfig_paths; do

#   # Extract the build configuration and lowercase it
#   build_config=$(echo "$unreal_xcconfig_path" | sed -n 's/.*_\(.*\)\.xcconfig/\1/p' | tr '[:upper:]' '[:lower:]')
  
#   # Calculate depth of file for creating relative path to corresponding Pods xcconfig
#   depth=$(( $(echo "$unreal_xcconfig_path" | tr -cd '/' | wc -c) - 1 ))
#   relative_prefix=$(printf '../%.0s' $(seq 1 $depth))
#   pod_xcconfig_path="${relative_prefix}Pods/Target Support Files/Pods-${project_name}/Pods-${project_name}.${build_config}.xcconfig"
#   escaped_pod_xcconfig_path=$(echo "$pod_xcconfig_path" | sed 's/\//\\\//g')

#   # Format include text
#   include_text="#include \"${escaped_pod_xcconfig_path}\""

#   # Check if the contents of the file already have the include line
#   if ! grep -q "^${include_text}" "${unreal_xcconfig_path}"; then
#     # Prepend include to the file
#     sed -i '' "1s/^/${include_text}\n/" "${unreal_xcconfig_path}"
#     echo "Updated ${unreal_xcconfig_path}"
#   else
#     echo "File already updated. Skipping ${unreal_xcconfig_path}"
#   fi
# done
